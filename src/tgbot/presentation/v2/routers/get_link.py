from sqlalchemy.ext.asyncio import AsyncSession
from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery
from dishka.integrations.aiogram import FromDishka, inject

from tgbot.application import UserGateway
from tgbot.presentation.v2.keyboards import (
    get_get_link_keyboard,
)
from tgbot.presentation.v2.subscribe_check import check_with_answer

get_link_router = Router()


@get_link_router.callback_query(F.data == "get_link")
@inject
async def get_daily_bonus(
    callback: CallbackQuery, session: FromDishka[AsyncSession], bot: Bot
):
    if not await check_with_answer(
        bot=bot,
        message=callback.message,
        user_tg_id=callback.from_user.id,
        session=session,
    ):
        return
    user_gateway = UserGateway(session)
    user = await user_gateway.by_tg_id(callback.from_user.id)
    await callback.message.edit_text(
        text=f"""
        üéâ –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –∑–≤—ë–∑–¥—ã! ‚≠êÔ∏è
üîó –¢–≤–æ—è –ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞:
https://t.me/{(await bot.get_me()).username}?start={user.referral_code} # TODO: —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ª—É–ø—É


üöÄ –ö–∞–∫ –Ω–∞–±—Ä–∞—Ç—å –º–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –ø–æ —Å—Å—ã–ª–∫–µ?
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å –µ—ë –¥—Ä—É–∑—å—è–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üë•
‚Ä¢ –ü–æ–¥–µ–ª–∏—Å—å —Å—Å—ã–ª–∫–æ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ –≤ —Å–≤–æ–µ–º –¢–ì –∏–ª–∏ –≤ —Å–≤–æ–µ–º Telegram –∫–∞–Ω–∞–ª–µ üì±
‚Ä¢ –û—Å—Ç–∞–≤—å –µ—ë –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∏–ª–∏ —á–∞—Ç–∞—Ö üó®
‚Ä¢ –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–π —Å—Å—ã–ª–∫—É –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö: TikTok, Instagram, WhatsApp –∏ –¥—Ä—É–≥–∏—Ö üåç

üíé –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å?
–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –±–æ—Ç–∞, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å +3‚≠êÔ∏è!

–î–µ–ª–∏—Å—å –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π —É–∂–µ —Å–µ–π—á–∞—Å! üöÄ
        """,
        reply_markup=get_get_link_keyboard(),
    )
